<!DOCTYPE HTML>
<html>
<head>
    <title>네임드 젠타임 관리</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--부트스트랩 css 추가-->
    <link rel="stylesheet" href="/css/lib/bootstrap.min.css">
    <style>
        [class*="col-"] {
            padding: 8px;
            border: 1px solid rgba(80,80,80,0.1);
            text-align: center;
        }
        [class*="hour"] {
            padding: 8px;
            border: 1px solid #005cbf;
            text-align: center;
        }
    </style>
</head>
<body>
<div class="container float-left">
    <ul class="list-group list-group-horizontal" style="width:800px; margin:10px 10px;">
        <a href="/" id="totalList" class="list-group-item list-group-item-action">전체보기</a>
        <a href="/genTermList?genTerm=180" id="genTerm180" class="list-group-item list-group-item-action">3시간 젠</a>
        <a href="/genTermList?genTerm=240" id="genTerm240" class="list-group-item list-group-item-action">4시간 젠</a>
        <a href="/genTermList?genTerm=300" id="genTerm300" class="list-group-item list-group-item-action">5시간 젠</a>
        <a href="/genTermList?genTerm=480" id="genTerm480" class="list-group-item list-group-item-action">8시간 젠</a>
        <a href="/genTermList?genTerm=720" id="genTerm720" class="list-group-item list-group-item-action">12시간 젠</a>
    </ul>
</div>
    <!-- 목록 출력 영역 -->
    <table class="table table-horizontal table-bordered">
        <thead class="thead-strong">
        <tr>
            <th>몹</th>
            <th>위치</th>
            <th>젠 예정 시간</th>
            <th>남은 시간</th>
            <th>컷</th>
        </tr>
        </thead>
        <tbody id="tbody">
            {{#monsters}}
                <tr class="monsterGenTime" id="{{id}}">
                    <td>{{name}}   {{#if mobType}} <span class="badge badge-pill badge-dark">불완전</span>{{/if}}  {{#if channel}} <span class="badge badge-warning">{{channel}}채널</span>{{/if}}</td>
                    <td>{{location}}</td>
                    <td class="genTime">{{genTimeStr}}</td>
                    <td class="remainTime"></td>
                    <td><button type="button" class="btn btn-success" onclick="monsterCut('{{id}}')">CUT!</button></td>
                    <input type="hidden" name="genTime" value="{{genTime}}" />
                    <input type="hidden" name="maxTime" value="{{maxTime}}" />
                </tr>
            {{/monsters}}
        </tbody>
    </table>

    <!--부트스트랩 js, jquery 추가-->
    <script src="/js/lib/jquery.min.js"></script>
    <script src="/js/lib/bootstrap.min.js"></script>


</body>
<script type="text/javascript">
    var param = "{{genTerm}}";
    console.log(param);
    $(document).ready(function(){
        setInterval(function()
        {
            setRemainTime();
        },1000);


        if(param == ""){
            $("#totalList").addClass("list-group-item-primary");
        }else{
            $("#genTerm"+param).addClass("list-group-item-primary");
        }
    });

    Handlebars.registerHelper("ifCond", function(v1,v2, options) {
        if(v1 === v2) {
            return options.fn(this);
        }
        return options.inverse(this);
    });

    function setRemainTime(){
        $(".monsterGenTime").each(function(){
            getRemainTime($(this).find("input[name='genTime']").val(), $(this).find("input[name='maxTime']").val(), $(this).find(".remainTime"));
        });
    }

    function getRemainTime(genTime, maxTime, obj){
        var now = new Date();
        var time = new Date(genTime);
        var gap = new Date(0,0,0,0,0,0,time-now);
        var diffHour = gap.getHours();
        var diffMin = gap.getMinutes();
        var diffSec = gap.getSeconds();

        if(time < now){
            var maxTime = new Date(maxTime);

            if(now > maxTime){
                obj.removeClass("text-primary");
                obj.removeClass("text-danger");
                obj.text("미아 상태");
            }else{
                obj.removeClass("text-danger");
                obj.addClass("text-primary");
                obj.text("젠 타임!!!");
            }
        }else{
            if(diffHour == 0 && diffMin <=4){
                obj.addClass("text-danger");
            }else{
                obj.removeClass("text-danger");
            }
            obj.text(diffHour+"시간 "+diffMin+"분 "+diffSec+"초");
        }



    }

    function monsterCut(monsterID){
        if(confirm("현재 시간으로 컷 타임을 저장하시겠습니까?")){
            $.ajax({
                url : '/updateGenTime',
                type : 'post',
                data : {id:monsterID},
                success:function(data){
                    $("#"+monsterID).find("input[name='genTime']").val(data.genTime);
                    $("#"+monsterID).find("input[name='maxTime']").val(data.maxTime);
                    $("#"+monsterID).find(".genTime").text(data.genTimeStr);
                }
            });
        }else{
            return false;
        }
    }



    function getGenList(mobGroup){
        $.ajax({
            url : '/selectGenList',
            type : 'post',
            data : {mobGroup : mobGroup},
            success : function(data){
                drawList(data);
            }
        })
    }

    function drawList(listData){
       /* console.log(listData);
        //핸들바 템플릿 가져오기
        var source = $("#entry-template").html();

        //핸들바 템플릿 컴파일
        var template = Handlebars.compile(source);

        //핸들바 템플릿에 바인딩할 데이터
        var data = {
            monsters: listData
        };

        //핸들바 템플릿에 데이터를 바인딩해서 HTML 생성
        var html = template(data);

        //생성된 HTML을 DOM에 주입
        $("#tbody").append(html);*/
    }
</script>
</html>